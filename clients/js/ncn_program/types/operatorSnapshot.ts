/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBoolDecoder,
  getBoolEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import {
  getStakeWeightsDecoder,
  getStakeWeightsEncoder,
  type StakeWeights,
  type StakeWeightsArgs,
} from '.';

export type OperatorSnapshot = {
  operator: Address;
  g1Pubkey: ReadonlyUint8Array;
  slotCreated: bigint;
  lastSnapshotSlot: bigint;
  isActive: number;
  ncnOperatorIndex: bigint;
  operatorIndex: bigint;
  hasMinimumStake: number;
  hasMinimumStakeNextEpoch: number;
  stakeWeight: StakeWeights;
  nextEpochStakeWeight: StakeWeights;
};

export type OperatorSnapshotArgs = {
  operator: Address;
  g1Pubkey: ReadonlyUint8Array;
  slotCreated: number | bigint;
  lastSnapshotSlot: number | bigint;
  isActive: number;
  ncnOperatorIndex: number | bigint;
  operatorIndex: number | bigint;
  hasMinimumStake: number;
  hasMinimumStakeNextEpoch: number;
  stakeWeight: StakeWeightsArgs;
  nextEpochStakeWeight: StakeWeightsArgs;
};

export function getOperatorSnapshotEncoder(): Encoder<OperatorSnapshotArgs> {
  return getStructEncoder([
    ['operator', getAddressEncoder()],
    ['g1Pubkey', fixEncoderSize(getBytesEncoder(), 32)],
    ['slotCreated', getU64Encoder()],
    ['lastSnapshotSlot', getU64Encoder()],
    ['isActive', getBoolEncoder()],
    ['ncnOperatorIndex', getU64Encoder()],
    ['operatorIndex', getU64Encoder()],
    ['hasMinimumStake', getBoolEncoder()],
    ['hasMinimumStakeNextEpoch', getBoolEncoder()],
    ['stakeWeight', getStakeWeightsEncoder()],
    ['nextEpochStakeWeight', getStakeWeightsEncoder()],
  ]);
}

export function getOperatorSnapshotDecoder(): Decoder<OperatorSnapshot> {
  return getStructDecoder([
    ['operator', getAddressDecoder()],
    ['g1Pubkey', fixDecoderSize(getBytesDecoder(), 32)],
    ['slotCreated', getU64Decoder()],
    ['lastSnapshotSlot', getU64Decoder()],
    ['isActive', getBoolDecoder()],
    ['ncnOperatorIndex', getU64Decoder()],
    ['operatorIndex', getU64Decoder()],
    ['hasMinimumStake', getBoolDecoder()],
    ['hasMinimumStakeNextEpoch', getBoolDecoder()],
    ['stakeWeight', getStakeWeightsDecoder()],
    ['nextEpochStakeWeight', getStakeWeightsDecoder()],
  ]);
}

export function getOperatorSnapshotCodec(): Codec<
  OperatorSnapshotArgs,
  OperatorSnapshot
> {
  return combineCodec(
    getOperatorSnapshotEncoder(),
    getOperatorSnapshotDecoder()
  );
}
